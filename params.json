{"name":"Gearbox","tagline":"Framework for asynchronous job dispatching","body":"### What is Gearbox?\r\nGearbox is a framework that was written to build RESTful web services that orchestrate a distributed system using job management.\r\n\r\n### How\r\nYou create an API that describes resources which have states.  When a user creates, updates or deletes that resource a job is inserted to be asynchronously processed by a worker (the part you write) and a status object is returned to the caller.  The status object tracks the progress of that job so the caller can know when the resources is created, updated or deleted.  Reads are also jobs worked on workers, but they are synchronous and don't use a status object.\r\n\r\n### Features\r\n* Workers can be written in C++, python, perl or PHP (patches for other language bindings welcome!)\r\n* Resources are modeled in JSON with schema validation\r\n* Children (jobs can run jobs)\r\n* Retries and Delay\r\n* Events and continuations\r\n* Cancelling (rolling back) jobs\r\n\r\n### History\r\nGearbox was written at Yahoo! in 2009 for orchestrating infrastructure tasks such as allocating a provisioning servers for Yahoo!'s cloud organization.  \r\n\r\n### Documentation and Examples\r\nThere is some documentation under the ```docs``` directory, but it was written for Yahoo! so it references some services that don't exist on the outside and it doesn't describe most of the advanced features.  Patches welcome!\r\n\r\nThe ```workers``` directory has a number of example workers in it to demonstrate all the functionality of gearbox.  We run these as part of our functional tests through our continuous integration process.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}